{"version":3,"sources":["services/index.js","context/AppContext.js","components/SearchBar/Input.jsx","components/SearchBar/index.js","context/Provider.js","images/eyeOpen.svg","images/eyeClosed.svg","pages/Login/index.js","images/profileIcon.svg","images/searchIcon.svg","components/Header/index.js","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","components/Footer/index.js","pages/Explorer/index.js","pages/FoodExplorer/index.js","pages/DrinkExplorer/index.js","pages/FoodArea/index.js","images/profile.svg","images/edit.svg","pages/Profile/index.jsx","components/Recommendation/index.js","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","components/FavButton/index.js","components/DetailsMain/RenderCategory.js","images/shareIcon.svg","images/loading.gif","components/Loading/index.jsx","components/DetailsMain/index.js","pages/DetailsPage/index.js","components/CategoryButton/index.jsx","images/menu.svg","images/close.svg","components/CategoriesFilterBar/index.jsx","components/RecipeCard/index.jsx","components/RecipesLibrary/index.jsx","components/RecipesMenu/index.jsx","pages/MainPage/index.jsx","components/TabBarButtons/index.jsx","components/CardRenderRecipes/index.jsx","pages/DoneRecipes/index.js","pages/NotFound/index.js","components/IngredientCard/index.js","components/IngredientsLibrary/index.jsx","components/IngredientsMenu/index.jsx","pages/IngredientsExplorer/index.js","pages/FavoriteRecipes/index.js","components/InProgressRecipes/RenderCategory.js","components/InProgressRecipes/Index.js","pages/ProgressRecipes/index.js","App.js","serviceWorker.js","index.js"],"names":["fetchAPI","url","a","fetch","then","res","json","response","emptyNullKiller","keyToSearch","object","Object","entries","filter","item","includes","map","mealOrCocktail","type","getDataFromLocalStorage","inProgressRecipes","localStorage","getItem","JSON","parse","meals","cocktails","setDataToLocalStorage","setItem","stringify","AppContext","createContext","Input","obj","htmlFor","id","className","dataTestID","name","value","onChange","placeholder","title","SearchBar","option","SEARCH_TERM","useState","inputSearch","setInputSearch","inputRadio","setInputRadio","useContext","setMeals","setDrinks","setDrinkIngredientSituation","setFoodIngredientSituation","history","useHistory","handleChange","target","checkResult","typeToLower","toLowerCase","global","alert","drinkOrFood","Bebidas","idDrink","Comidas","idMeal","length","push","searchCriteria","searchInput","radio","radioCriteria","ingredient","firstLetter","drinks","onClick","Provider","children","user","password","login","setLogin","currentFoodFilter","setCurrentFoodFilter","currentDrinkFilter","setCurrentDrinkFilter","page","setPage","searching","setSearching","filteredByIngredient","setFilteredByIngredient","foodIngredientSituation","contextValue","drinkIngredientSituation","Login","setUser","setPassword","hidden","setHidden","visible","setVisible","buttonDisabled","test","src","eyeOpen","eyeClosed","alt","disabled","email","Header","render","mainTitlePage","titleForCompare","searchRender","titlePage","to","perfilIcon","searchIcon","Footer","renderIcon","link","datatestid","icon","drinkIcon","exploreIcon","mealIcon","Explorer","FoodExplorer","randomMeal","setRandomMeal","useEffect","fetchRandomMeal","result","randomMealID","DrinkExplorer","randomCockTail","setRandomCocktail","fetchRandomCocktail","randomCocktailID","FoodArea","areaOptions","setAreaOptions","areaFoods","setAreaFoods","filterArea","setFilterArea","foods","getAreaOptions","slice","getFoods","strArea","index","strMealThumb","strMeal","Profile","handleClick","path","clear","ProfileImage","Edit","Recommendation","foodType","recommendation","window","location","reload","console","log","dataTestId","dataTestId2","strDrink","strDrinkThumb","FavButton","foodObj","localFav","setLocalFav","handleFavClick","prevState","favoriteRecipes","newList","handleUnfavClick","element","verifyFavorited","filledHeart","emptyHeart","RenderCategory","drinkMessage","foodMessage","Loading","loadingGif","copy","require","DetailsMain","ingredients","setIngredients","measures","setMeasures","instructions","setInstructions","setRecommendation","loading","setLoading","linkCopied","setLinkCopied","setFoodObj","video","setVideo","setFoodState","food","currentFood","area","category","strCategory","alcoholicOrNot","image","youtubeLink","strYoutube","replace","i","key","key2","measure","strInstructions","setDrinkState","drink","currentDrink","strAlcoholic","fetchDetails","r","res2","renderMessage","altText","pathname","setTimeout","shareIcon","testid","ingredientText","DetailsPage","match","params","substr","CategoryButton","categoryName","CategoriesFilterBar","categories","openMenu","setOpenMenu","buttonAnim","setButtonAnim","Close","Menu","RecipeCard","details","RecipesLibrary","recipes","recipe","RecipesMenu","route","array","arrayCategories","firstCategories","_category","firstArray","_recipe","FOOD_ENDPOINT","FOOD_CATEGORIES_ENDPOINT","DRINK_ENDPOINT","DRINK_CATEGORIES_ENDPOINT","MainPage","mealsCategories","setMealsCategories","drinksCategories","setDrinksCategories","foodCategoriesResponse","drinkCategoriesResponse","foodResponse","drinkResponse","getMealsAndCategories","getMeals","getFilteredMeals","getDrinks","getFilteredDrinks","TabBarButtons","SELECTED","selectAll","setSelectAll","selectFood","setSelectFood","selectDrinks","setSelectDrinks","CardRenderRecipes","recipesReceive","favoriteButton","hasMessage","setHasMessage","tags","tagNames","ind","tagName","doneDate","forEach","itemStorage","ToTurnFavorite","blackHeartIcon","DoneRecipes","doneRecipes","setDoneRecipes","copyDoneRecipes","setCopyDoneRecipes","getDoneFromStorage","filterItems","filteredRecipes","NotFound","IngredientCard","strIngredient","strIngredient1","IngredientsLibrary","IngredientsMenu","getMealsIngredients","getDrinksIngredients","firstIngredients","IngredientsExplorer","FavoriteRecipes","getItems","InprogressRecipes","ingredientsCheck","setIngredientsCheck","setObjectState","apiData","typeObj","comida","bebida","currentObj","handleCheckClick","isChecked","checked","dataFromLocalStorage","doneRecipesStorage","data","Date","dia","getDate","mes","getMonth","ano","getYear","full","newArr","recipesDone","ProgressRecipes","App","exact","component","props","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.049cb8c5.chunk.js","sourcesContent":["export default async function fetchAPI(url) {\n  const response = await fetch(url).then((res) => res.json());\n  return response;\n}\n\nexport const emptyNullKiller = (keyToSearch, object) => Object.entries(object)\n  .filter((item) => item[1] !== null)\n  .filter((item) => item[1] !== '')\n  .filter((item) => item[0].includes(keyToSearch))\n  .map((item) => item[1]);\n\nexport const mealOrCocktail = (type) => (type === 'comida' ? 'meals' : 'cocktails');\n\nexport const getDataFromLocalStorage = () => {\n  const inProgressRecipes = localStorage.getItem('inProgressRecipes');\n\n  return inProgressRecipes\n    ? JSON.parse(inProgressRecipes)\n    : {\n      meals: {},\n      cocktails: {},\n    };\n};\n\nexport const setDataToLocalStorage = (inProgressRecipes) => {\n  localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n};\n\nexport const clearLocalStorage = (type, id) => {\n  const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  delete inProgress[mealOrCocktail(type)][id];\n  localStorage.setItem(\n    'inProgressRecipes',\n    JSON.stringify(inProgress),\n  );\n};\n","import { createContext } from 'react';\n\nconst AppContext = createContext();\n\nexport default AppContext;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default function Input({ obj }) {\n  return (\n    <label htmlFor={ obj.id } className=\"input-label\">\n      <input\n        type={ obj.type }\n        id={ obj.id }\n        data-testid={ obj.dataTestID }\n        name={ obj.name }\n        value={ obj.value }\n        onChange={ obj.onChange }\n        placeholder={ obj.placeholder }\n      />\n      {obj.title}\n    </label>\n  );\n}\n\nInput.propTypes = {\n  obj: PropTypes.shape({\n    dataTestID: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Input from './Input';\nimport fetchAPI from '../../services';\nimport AppContext from '../../context/AppContext';\nimport './search-bar.css';\n\nconst SearchBar = ({ option }) => {\n  const SEARCH_TERM = 'searchTerm';\n  const [inputSearch, setInputSearch] = useState('');\n  const [inputRadio, setInputRadio] = useState('');\n  const { setMeals, setDrinks,\n    setDrinkIngredientSituation, setFoodIngredientSituation } = useContext(AppContext);\n  const history = useHistory();\n\n  const handleChange = ({ target }) => (target.name === 'searchBar'\n    ? setInputSearch(target.value)\n    : setInputRadio(target.id));\n\n  const checkResult = (type, response) => {\n    const typeToLower = type.toLowerCase();\n\n    if (response === null) {\n      return global.alert(\n        'Sinto muito, não encontramos nenhuma receita para esses filtros.',\n      );\n    }\n\n    const drinkOrFood = {\n      Bebidas: response[0].idDrink,\n      Comidas: response[0].idMeal,\n    };\n\n    if (response.length === 1) {\n      history.push(`/${typeToLower}/${drinkOrFood[type]}`);\n    }\n    return type === 'Comidas' ? setMeals(response) : setDrinks(response);\n  };\n\n  const searchCriteria = async (searchInput, radio, type) => {\n    if (searchInput.length > 1 && radio === 'firstLetter') {\n      return global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n    const drinkOrFood = {\n      Bebidas: 'thecocktaildb',\n      Comidas: 'themealdb',\n    };\n\n    const radioCriteria = {\n      ingredient: `https://www.${drinkOrFood[type]}.com/api/json/v1/1/filter.php?i=${searchInput}`,\n      name: `https://www.${drinkOrFood[type]}.com/api/json/v1/1/search.php?s=${searchInput}`,\n      firstLetter: `https://www.${drinkOrFood[type]}.com/api/json/v1/1/search.php?f=${searchInput}`,\n    };\n\n    if (type === 'Comidas') {\n      setFoodIngredientSituation(false);\n      const { meals } = await fetchAPI(radioCriteria[radio]);\n      checkResult(type, meals);\n    }\n    if (type === 'Bebidas') {\n      setDrinkIngredientSituation(false);\n      const { drinks } = await fetchAPI(radioCriteria[radio]);\n      checkResult(type, drinks);\n    }\n  };\n\n  return (\n    <form className=\"main-container\">\n      <div className=\"search-input\">\n        <Input\n          obj={ {\n            title: '',\n            type: 'text',\n            id: 'searchBar',\n            dataTestID: 'search-input',\n            name: 'searchBar',\n            value: inputSearch,\n            onChange: handleChange,\n            placeholder: `Buscar ${option}`,\n          } }\n        />\n      </div>\n      <div className=\"radios\">\n        <Input\n          obj={ {\n            title: 'Ingrediente',\n            type: 'radio',\n            id: 'ingredient',\n            dataTestID: 'ingredient-search-radio',\n            name: SEARCH_TERM,\n            value: inputRadio,\n            onChange: handleChange,\n          } }\n        />\n        <Input\n          obj={ {\n            title: 'Nome',\n            type: 'radio',\n            id: 'name',\n            dataTestID: 'name-search-radio',\n            name: SEARCH_TERM,\n            value: inputRadio,\n            onChange: handleChange,\n          } }\n        />\n        <Input\n          obj={ {\n            title: 'Primeira letra',\n            type: 'radio',\n            id: 'firstLetter',\n            dataTestID: 'first-letter-search-radio',\n            name: SEARCH_TERM,\n            value: inputRadio,\n            onChange: handleChange,\n          } }\n        />\n      </div>\n      <button\n        className=\"search-btn\"\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ () => searchCriteria(inputSearch, inputRadio, option) }\n      >\n        Buscar\n      </button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  option: PropTypes.string.isRequired,\n};\n\nexport default SearchBar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from './AppContext';\n\nfunction Provider({ children }) {\n  const [login, setLogin] = useState({\n    user: '',\n    password: '',\n  });\n  const [currentFoodFilter, setCurrentFoodFilter] = useState('');\n  const [currentDrinkFilter, setCurrentDrinkFilter] = useState('');\n  const [page, setPage] = useState('Comidas');\n  const [searching, setSearching] = useState(false);\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [filteredByIngredient, setFilteredByIngredient] = useState([]);\n  const [foodIngredientSituation, setFoodIngredientSituation] = useState(false);\n  const [drinkIngredientSituation, setDrinkIngredientSituation] = useState(false);\n\n  const contextValue = {\n    login,\n    setLogin,\n    currentFoodFilter,\n    setCurrentFoodFilter,\n    currentDrinkFilter,\n    setCurrentDrinkFilter,\n    page,\n    setPage,\n    searching,\n    setSearching,\n    meals,\n    setMeals,\n    drinks,\n    setDrinks,\n    filteredByIngredient,\n    setFilteredByIngredient,\n    foodIngredientSituation,\n    setFoodIngredientSituation,\n    drinkIngredientSituation,\n    setDrinkIngredientSituation,\n  };\n\n  return (\n    <AppContext.Provider value={ contextValue }>{children}</AppContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n","export default __webpack_public_path__ + \"static/media/eyeOpen.bbb846ef.svg\";","export default __webpack_public_path__ + \"static/media/eyeClosed.89eada65.svg\";","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router';\n\nimport eyeOpen from '../../images/eyeOpen.svg';\nimport eyeClosed from '../../images/eyeClosed.svg';\n\nimport AppContext from '../../context/AppContext';\nimport './Login.css';\n\nexport default function Login() {\n  const [user, setUser] = useState('');\n  const [password, setPassword] = useState('');\n  const { setLogin } = useContext(AppContext);\n  const history = useHistory();\n  const [hidden, setHidden] = useState(true);\n  const [visible, setVisible] = useState('password');\n  function handleChange({ target }) {\n    return target.name === 'user'\n      ? setUser(target.value)\n      : setPassword(target.value);\n  }\n\n  function handlePassword() {\n    setHidden(!hidden);\n    if (hidden) {\n      setVisible('text');\n    } else {\n      setVisible('password');\n    }\n  }\n\n  function handleClick() {\n    setLogin({ user, password });\n    localStorage.setItem('user', JSON.stringify({ email: user }));\n    localStorage.setItem('mealsToken', JSON.stringify(1));\n    localStorage.setItem('cocktailsToken', JSON.stringify(1));\n    history.push('/comidas');\n  }\n  // referência para a regex utilizada: https://medium.com/@zackcreach/shred-the-gnar-how-to-write-decode-regex-for-email-validation-9a970fa91641\n  const buttonDisabled = () => {\n    const securityLength = 7;\n    // Verifico de o email segue o padrao e se o tamanho da senha é maior ou igual a 7\n    // Ser for verdadeiro eu removo o disabled do button\n    return !(/(^\\w.*@\\w+\\.\\w)/.test(user) && password.length >= securityLength);\n  };\n\n  return (\n    <form className=\"form-horizontal\">\n      <div className=\"form-content\">\n        <label htmlFor=\"user\" className=\"input-email\">\n          E-mail\n          <input\n            type=\"text\"\n            data-testid=\"email-input\"\n            name=\"user\"\n            value={ user }\n            onChange={ handleChange }\n          />\n        </label>\n        <div className=\"input-password-area\">\n          <label htmlFor=\"password\" className=\"input-password\">\n            Senha\n            <input\n              type={ visible }\n              data-testid=\"password-input\"\n              name=\"password\"\n              value={ password }\n              onChange={ handleChange }\n            />\n          </label>\n          <button type=\"button\" onClick={ handlePassword } className=\"btn-hidden\">\n            <img src={ hidden ? eyeOpen : eyeClosed } alt=\"eye-passowrd\" />\n          </button>\n        </div>\n        <button\n          data-testid=\"login-submit-btn\"\n          type=\"button\"\n          className={ buttonDisabled() ? 'enter-btn-inv' : 'enter-btn' }\n          disabled={ buttonDisabled() }\n          onClick={ handleClick }\n        >\n          Entrar\n        </button>\n      </div>\n    </form>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/profileIcon.44eb3608.svg\";","export default __webpack_public_path__ + \"static/media/searchIcon.7353564d.svg\";","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './header.css';\nimport perfilIcon from '../../images/profileIcon.svg';\nimport searchIcon from '../../images/searchIcon.svg';\nimport AppContext from '../../context/AppContext';\n\nconst Header = ({ searchRender, titlePage }) => {\n  const { setSearching, searching } = useContext(AppContext);\n  function title(mainTitlePage) {\n    return (\n      <div className=\"title-header\">\n        <p data-testid=\"page-title\">{mainTitlePage}</p>\n      </div>\n    );\n  }\n  function perfil() {\n    return (\n      <div className=\"perfil-icon\">\n        <Link to=\"/perfil\">\n          <img\n            src={ perfilIcon }\n            alt=\"Perfil Icon\"\n            data-testid=\"profile-top-btn\"\n          />\n        </Link>\n      </div>\n    );\n  }\n\n  function search(render) {\n    return render ? (\n      <div className=\"icon-Search\">\n        <button type=\"button\" onClick={ () => setSearching(!searching) }>\n          <img\n            src={ searchIcon }\n            alt=\"Search Icon\"\n            data-testid=\"search-top-btn\"\n          />\n        </button>\n      </div>\n    ) : (\n      <div className=\"icon-Search\">{}</div>\n    );\n  }\n\n  function classSelection(titleForCompare) {\n    if (titleForCompare.includes('Comidas')) {\n      return 'main-header food-header';\n    } if (titleForCompare.includes('Bebidas')) {\n      return 'main-header drink-header';\n    }\n    return 'main-header';\n  }\n\n  return (\n    <div\n      className={ classSelection(titlePage) }\n    >\n      {perfil()}\n      {title(titlePage)}\n      {search(searchRender)}\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  searchRender: PropTypes.bool,\n  titlePage: PropTypes.string,\n}.isRequired;\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/drinkIcon.efc0d3c1.svg\";","export default __webpack_public_path__ + \"static/media/exploreIcon.07634623.svg\";","export default __webpack_public_path__ + \"static/media/mealIcon.40029e7f.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport drinkIcon from '../../images/drinkIcon.svg';\nimport exploreIcon from '../../images/exploreIcon.svg';\nimport mealIcon from '../../images/mealIcon.svg';\nimport './footer.css';\n\nconst Footer = () => {\n  const renderIcon = (link, datatestid, icon, alt) => (\n    <Link to={ link }>\n      <button\n        className=\"btn-footer\"\n        type=\"button\"\n      >\n        <img\n          src={ icon }\n          data-testid={ datatestid }\n          alt={ alt }\n        />\n      </button>\n    </Link>\n  );\n\n  return (\n    <div data-testid=\"footer\" className=\"main-footer\">\n      { renderIcon('/bebidas', 'drinks-bottom-btn', drinkIcon, 'ícone para bebida') }\n      { renderIcon('/explorar', 'explore-bottom-btn', exploreIcon, 'ícone para explore') }\n      { renderIcon('/comidas', 'food-bottom-btn', mealIcon, 'ícone de comida') }\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\n\nimport './Explorer.css';\n\nexport default function Explorer() {\n  return (\n    <div className=\"main-explorer\">\n      <Header searchRender={ false } titlePage=\"Explorar\" />\n      <div className=\"explorer-buttons\">\n        <Link to=\"/explorar/comidas\">\n          <button data-testid=\"explore-food\" type=\"button\">Explorar Comidas</button>\n        </Link>\n        <Link to=\"/explorar/bebidas\">\n          <button data-testid=\"explore-drinks\" type=\"button\">Explorar Bebidas</button>\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\n\nimport './FoodExplorer.css';\n\nexport default function FoodExplorer() {\n  const [randomMeal, setRandomMeal] = useState(0);\n\n  useEffect(() => {\n    const fetchRandomMeal = async () => {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/random.php')\n        .then((result) => result.json());\n      return setRandomMeal(response.meals[0].idMeal);\n    };\n    fetchRandomMeal();\n  }, []);\n\n  const randomMealID = randomMeal;\n\n  return (\n    <div className=\"main-explorer-food\">\n      <Header searchRender={ false } titlePage=\"Explorar Comidas\" />\n      <div className=\"explorer-food-buttons\">\n        <Link to=\"/explorar/comidas/ingredientes\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n          >\n            Por Ingredientes\n          </button>\n        </Link>\n        <Link to=\"/explorar/comidas/area\">\n          <button type=\"button\" data-testid=\"explore-by-area\">Por Local de Origem</button>\n        </Link>\n        <Link to={ `/comidas/${randomMealID}` }>\n          <button type=\"button\" data-testid=\"explore-surprise\">Me Surpreenda!</button>\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport './DrinkExplorer.css';\n\nexport default function DrinkExplorer() {\n  const [randomCockTail, setRandomCocktail] = useState(0);\n\n  useEffect(() => {\n    const fetchRandomCocktail = async () => {\n      const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php')\n        .then((result) => result.json());\n      return setRandomCocktail(response.drinks[0].idDrink);\n    };\n    fetchRandomCocktail();\n  }, []);\n\n  const randomCocktailID = randomCockTail;\n\n  return (\n    <div className=\"main-drink-explorer\">\n      <Header searchRender={ false } titlePage=\"Explorar Bebidas\" />\n      <div className=\"buttons-drink-explorer\">\n        <Link to=\"/explorar/bebidas/ingredientes\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n          >\n            Por Ingredientes\n          </button>\n        </Link>\n        <Link to={ `/bebidas/${randomCocktailID}` }>\n          <button type=\"button\" data-testid=\"explore-surprise\">Me Surpreenda!</button>\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport fetchAPI from '../../services';\nimport './FoodArea.css';\n\nexport default function FoodArea() {\n  const [areaOptions, setAreaOptions] = useState([]);\n  const [areaFoods, setAreaFoods] = useState([]);\n  const [filterArea, setFilterArea] = useState('');\n\n  // pegando as areas\n  useEffect(() => {\n    async function getAreaOptions() {\n      const foods = await fetchAPI('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n      setAreaOptions(foods.meals);\n    }\n    getAreaOptions();\n  }, []);\n\n  // filtrando comidas\n  useEffect(() => {\n    async function getFoods(filter) {\n      const foods = await fetchAPI(filter ? 'https://www.themealdb.com/api/json/v1/1/search.php?s=' : `https://www.themealdb.com/api/json/v1/1/filter.php?a=${filterArea}`);\n      // https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\n      // usando slice para captar uma copia do array com posição inicial e final\n      const TWELVE = 12;\n      setAreaFoods(foods.meals.slice(0, TWELVE));\n    }\n    getFoods(filterArea === '');\n  }, [filterArea]);\n\n  // handleChange = (({ target }) => setFilterArea(target.value === 'All' ? '' : target.value));\n\n  return (\n    <div className=\"main-explorer-food-location\">\n      <Header searchRender titlePage=\"Explorar Origem\" />\n      <div className=\"explorer-food-select\">\n        <select\n          name=\"areaDropdown\"\n          data-testid=\"explore-by-area-dropdown\"\n          // https://stackoverflow.com/questions/54422696/in-react-hook-no-e-target-in-handlechange-with-setvalue\n          // uma forma de fazer handle change diretamente no onChange\n          onChange={ ({ target }) => {\n            setFilterArea(target.value === 'All' ? '' : target.value);\n          } }\n        >\n          <option value=\"All\" data-testid=\"All-option\">\n            All\n          </option>\n          {areaOptions.map(({ strArea }) => (\n            <option value={ strArea } key={ strArea } data-testid={ `${strArea}-option` }>\n              {strArea}\n            </option>\n          ))}\n        </select>\n      </div>\n      {areaFoods.map(({ strMealThumb, strMeal, idMeal }, index) => (\n        <Link key={ index } to={ `/comidas/${idMeal}` } className=\"food-card\">\n          <div\n            data-testid={ `${index}-recipe-card` }\n            className=\"explorer-food-card\"\n          >\n            <img\n              src={ strMealThumb }\n              alt={ strMeal }\n              data-testid={ `${index}-card-img` }\n            />\n            <h3 data-testid={ `${index}-card-name` }>{strMeal}</h3>\n          </div>\n        </Link>\n      ))}\n      <Footer />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/profile.74c7b339.svg\";","export default __webpack_public_path__ + \"static/media/edit.b62beaf5.svg\";","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport './Profile.css';\nimport ProfileImage from '../../images/profile.svg';\nimport Edit from '../../images/edit.svg';\n\nexport default function Profile() {\n  const history = useHistory();\n  const DONE_PATH = '/receitas-feitas';\n  const FAVORITES_PATH = '/receitas-favoritas';\n  const LOGIN_PATH = '/';\n\n  // Modelo de função de redirecionamento de:\n  // https://stackoverflow.com/questions/50644976/react-button-onclick-redirect-page\n  const handleClick = (path) => {\n    if (path === LOGIN_PATH) {\n      localStorage.clear();\n      history.push(path);\n    }\n    history.push(path);\n  };\n\n  return (\n    <div className=\"main-profile-page\">\n      <Header searchRender={ false } titlePage=\"Perfil\" />\n      {localStorage.getItem('user') ? (\n        <div className=\"main-profile-content\">\n          <div className=\"main-profile-image\">\n            <div className=\"profile-image\">\n              <img src={ ProfileImage } alt=\"profile\" />\n            </div>\n            <div className=\"profile-button-edit\">\n              <img src={ Edit } alt=\"edit\" />\n            </div>\n          </div>\n          <h3 data-testid=\"profile-email\">\n            {JSON.parse(localStorage.getItem('user')).email}\n          </h3>\n          <div className=\"main-profile-buttons\">\n            <button\n              type=\"button\"\n              data-testid=\"profile-done-btn\"\n              onClick={ () => handleClick(DONE_PATH) }\n              className=\"btn btn-profile\"\n            >\n              Receitas Feitas\n\n            </button>\n            <button\n              type=\"button\"\n              data-testid=\"profile-favorite-btn\"\n              onClick={ () => handleClick(FAVORITES_PATH) }\n              className=\"btn btn-fav\"\n            >\n              Receitas Favoritas\n\n            </button>\n          </div>\n          <button\n            type=\"button\"\n            data-testid=\"profile-logout-btn\"\n            onClick={ () => handleClick(LOGIN_PATH) }\n            className=\"btn-sair\"\n          >\n            Sair\n          </button>\n        </div>\n      ) : (\n        <div className=\"main-profile\" />\n      )}\n      <Footer />\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport './Recomendation.css';\n\nexport default function Recommendation({ foodType, recommendation }) {\n  const history = useHistory();\n\n  function handleClick(item, type) {\n    if (type === 'drink') {\n      history.push(`/bebidas/${item}`);\n    } else {\n      history.push(`/comidas/${item}`);\n    }\n    window.location.reload();\n  }\n\n  const renderRecommendation = (item, index) => {\n    console.log(item.idDrink);\n    const dataTestId = `${index}-recomendation-card`;\n    const dataTestId2 = `${index}-recomendation-title`;\n    const { strMeal } = item;\n    if (foodType === 'comida') {\n      const { strDrink } = item;\n      return (\n        <div\n          data-testid={ dataTestId }\n          key={ item.idDrink }\n          className=\"recommendation-box\"\n          onClick={ () => { handleClick(item.idDrink, 'drink'); } }\n          aria-hidden=\"true\"\n        >\n          <img\n            alt=\"recomendação\"\n            src={ item.strDrinkThumb }\n            className=\"recommendation-image\"\n          />\n          <p data-testid={ dataTestId2 }>{ `${strDrink}` }</p>\n        </div>\n      );\n    }\n    return (\n      <div\n        data-testid={ dataTestId }\n        key={ item.idMeal }\n        className=\"recommendation-box\"\n        onClick={ () => { handleClick(item.idMeal, 'food'); } }\n        aria-hidden=\"true\"\n      >\n        <img\n          alt=\"recomendação\"\n          src={ item.strMealThumb }\n          className=\"recommendation-image\"\n        />\n        <p data-testid={ dataTestId2 }>{ `${strMeal}` }</p>\n      </div>\n    );\n  };\n  return (\n    <div className=\"recommendation-area\">\n      { recommendation.map(renderRecommendation) }\n    </div>\n  );\n}\n\nRecommendation.propTypes = {\n  foodType: PropTypes.string.isRequired,\n  recommendation: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/blackHeartIcon.083cb006.svg\";","export default __webpack_public_path__ + \"static/media/whiteHeartIcon.2b822118.svg\";","import React, { useState, useEffect } from 'react';\n\nimport filledHeart from '../../images/blackHeartIcon.svg';\nimport emptyHeart from '../../images/whiteHeartIcon.svg';\n\nexport default function FavButton({ id, foodObj }) {\n  const [localFav, setLocalFav] = useState(false);\n\n  const verifyFavorited = () => {\n    let favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favoriteRecipes === null) {\n      favoriteRecipes = [];\n    }\n    const newList = favoriteRecipes.filter((element) => element.id !== id);\n    if (favoriteRecipes.length > newList) {\n      setLocalFav(true);\n    }\n  };\n\n  const handleFavClick = () => {\n    setLocalFav((prevState) => !prevState);\n    let favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favoriteRecipes === null) {\n      favoriteRecipes = [];\n    }\n    const newList = [...favoriteRecipes, foodObj];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newList));\n  };\n\n  const handleUnfavClick = () => {\n    setLocalFav((prevState) => !prevState);\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newList = favoriteRecipes.filter((element) => element.id !== id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newList));\n  };\n\n  const renderButtons = () => {\n    if (localFav) {\n      return (\n        <button\n          type=\"button\"\n          onClick={ handleUnfavClick }\n        >\n          <img\n            src={ filledHeart }\n            alt=\"coração de favorito preenchido\"\n            data-testid=\"favorite-btn\"\n            className=\"fav-button\"\n          />\n        </button>\n      );\n    }\n    return (\n      <button\n        type=\"button\"\n        onClick={ handleFavClick }\n      >\n        <img\n          data-testid=\"favorite-btn\"\n          alt=\"coração de favorito vazio\"\n          src={ emptyHeart }\n          className=\"fav-button\"\n        />\n      </button>\n    );\n  };\n\n  useEffect(() => {\n    verifyFavorited();\n  }, []);\n\n  return renderButtons();\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function RenderCategory({ foodType, drinkMessage, foodMessage }) {\n  return (\n    <h2 data-testid=\"recipe-category\">\n      { foodType === 'comida' ? foodMessage : drinkMessage }\n    </h2>\n  );\n}\n\nRenderCategory.propTypes = {\n  foodType: PropTypes.string.isRequired,\n  drinkMessage: PropTypes.string.isRequired,\n  foodMessage: PropTypes.string.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/shareIcon.87def1bd.svg\";","export default __webpack_public_path__ + \"static/media/loading.c0b2b964.gif\";","import React from 'react';\nimport loadingGif from '../../images/loading.gif';\nimport './Loading.css';\n\nexport default function Loading() {\n  return (\n    <div className=\"loading\">\n      <div className=\"gif\">\n        <img src={ loadingGif } alt=\"gif\" />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './detailsMain.css';\nimport Recommendation from '../Recommendation';\nimport FavButton from '../FavButton';\nimport RenderCategory from './RenderCategory';\nimport shareIcon from '../../images/shareIcon.svg';\nimport Loading from '../Loading';\n\nconst copy = require('clipboard-copy');\n\nconst DetailsMain = ({ foodType, id, history }) => {\n  console.log(foodType);\n  const [ingredients, setIngredients] = useState([]);\n  const [measures, setMeasures] = useState([]);\n  const [instructions, setInstructions] = useState('');\n  const [recommendation, setRecommendation] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [linkCopied, setLinkCopied] = useState(false);\n  const [foodObj, setFoodObj] = useState({});\n  const [video, setVideo] = useState('');\n\n  const setFoodState = (res) => {\n    const food = res.meals[0];\n    const currentFood = {\n      id,\n      type: foodType,\n      area: food.strArea,\n      category: food.strCategory,\n      alcoholicOrNot: '',\n      name: food.strMeal,\n      image: food.strMealThumb,\n    };\n    setFoodObj(currentFood);\n    const youtubeLink = food.strYoutube.replace('watch?v=', 'embed/');\n    setVideo(youtubeLink);\n    const maxIngredients = 20;\n    for (let i = 1; i <= maxIngredients; i += 1) {\n      const key = `strIngredient${i}`;\n      const ingredient = [food[key]];\n      const key2 = `strMeasure${i}`;\n      const measure = [food[key2]];\n      if (ingredient[0] !== '') {\n        setIngredients((prevState) => [...prevState, ...ingredient]);\n        setMeasures((prevState) => [...prevState, ...measure]);\n      }\n    }\n    setInstructions(food.strInstructions);\n  };\n\n  const setDrinkState = (res) => {\n    const drink = res.drinks[0];\n    const currentDrink = {\n      id,\n      type: foodType,\n      area: '',\n      category: drink.strCategory,\n      alcoholicOrNot: drink.strAlcoholic,\n      name: drink.strDrink,\n      image: drink.strDrinkThumb,\n    };\n    setFoodObj(currentDrink);\n    const maxIngredients = 15;\n    for (let i = 1; i <= maxIngredients; i += 1) {\n      const key = `strIngredient${i}`;\n      const ingredient = [drink[key]];\n      const key2 = `strMeasure${i}`;\n      const measure = [drink[key2]];\n      if (ingredient[0] !== null) {\n        setIngredients((prevState) => [...prevState, ...ingredient]);\n        setMeasures((prevState) => [...prevState, ...measure]);\n      }\n    }\n    setInstructions(drink.strInstructions);\n  };\n\n  const fetchDetails = async () => {\n    if (foodType === 'comida') {\n      const res = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`)\n        .then((r) => r.json());\n      const res2 = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=')\n        .then((r) => r.json());\n      setFoodState(res);\n      const recAmount = 6;\n      setRecommendation(res2.drinks.slice(0, recAmount));\n    } else {\n      const res = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`)\n        .then((r) => r.json());\n      const res2 = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n        .then((r) => r.json());\n      setDrinkState(res);\n      const recAmount = 6;\n      setRecommendation(res2.meals.slice(0, recAmount));\n    }\n    setLoading(false);\n  };\n\n  const handleBeginClick = () => {\n    const path = `${history.location.pathname}/in-progress`;\n    history.push(path);\n  };\n\n  const handleShareClick = () => {\n    const { pathname } = history.location;\n    copy(`http://localhost:3000${pathname}`);\n    setLinkCopied(true);\n    const TIMER = 1000;\n    setTimeout(() => {\n      setLinkCopied(false);\n    }, TIMER);\n  };\n\n  useEffect(() => {\n    fetchDetails();\n  }, []);\n\n  if (loading) {\n    return (\n      <div>\n        <Loading />\n      </div>\n    );\n  }\n\n  function messageCopy(renderMessage) {\n    return (\n      renderMessage ? (\n        <div className={ linkCopied ? 'show-message' : 'hidden-message' }>\n          Link copiado!\n        </div>\n      ) : '');\n  }\n\n  const altText = `Foto do ${foodObj.name}`;\n  return (\n    <div className=\"main-recipe\">\n      <div className=\"recipe-title\">\n        <h1 data-testid=\"recipe-title\">{ foodObj.name }</h1>\n      </div>\n      <div className=\"category-food\">\n        <RenderCategory\n          foodType={ foodType }\n          foodMessage={ foodObj.category }\n          drinkMessage={ foodObj.alcoholicOrNot }\n        />\n      </div>\n      <div className=\"recipe-image\">\n        <img\n          src={ foodObj.image }\n          alt={ altText }\n          data-testid=\"recipe-photo\"\n        />\n      </div>\n      <div className=\"recipe-buttons\">\n        <FavButton id={ id } foodObj={ foodObj } />\n        <button\n          type=\"button\"\n          data-testid=\"share-btn\"\n          onClick={ handleShareClick }\n        >\n          <img\n            src={ shareIcon }\n            alt=\"share Icon\"\n          />\n        </button>\n      </div>\n      <div className=\"recipe-igredient-list\">\n        <ul>\n          { ingredients.map((ingredient, index) => {\n            const testid = `${index}-ingredient-name-and-measure`;\n            const ingredientText = `${ingredient} / ${measures[index]}`;\n            return (\n              <li\n                key={ ingredient }\n                data-testid={ testid }\n              >\n                { ingredientText }\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"recipe-instructions\">\n        <p data-testid=\"instructions\">{ instructions }</p>\n      </div>\n      {foodType === 'comida'\n        ? (\n          <div className=\"video-content\">\n            <iframe\n              title=\"Instruction Video\"\n              src={ video }\n              data-testid=\"video\"\n            />\n          </div>\n        ) : ('') }\n      <div className=\"recomendations\">\n        <Recommendation foodType={ foodType } recommendation={ recommendation } />\n      </div>\n      <button\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        onClick={ handleBeginClick }\n        className=\"begin-button\"\n      >\n        Começar Receita\n      </button>\n      { messageCopy(linkCopied) }\n    </div>\n  );\n};\n\nDetailsMain.propTypes = {\n  foodType: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default DetailsMain;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DetailsMain from '../../components/DetailsMain';\n\nconst DetailsPage = ({ match, history }) => {\n  const { params, path } = match;\n  const charactersIndex = 6;\n  const foodType = path.substr(1, charactersIndex);\n  return (\n    <DetailsMain id={ params.id } foodType={ foodType } history={ history } />\n  );\n};\n\nDetailsPage.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default DetailsPage;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from '../../context/AppContext';\n\nexport default function CategoryButton({ category }) {\n  const { currentFoodFilter, setCurrentFoodFilter,\n    currentDrinkFilter, setCurrentDrinkFilter, page,\n    setFoodIngredientSituation, setDrinkIngredientSituation } = useContext(AppContext);\n\n  function handleClick(categoryName) {\n    if (page === 'Comidas') {\n      setFoodIngredientSituation(false);\n      if (currentFoodFilter === categoryName) {\n        setCurrentFoodFilter('');\n      } if (currentFoodFilter !== categoryName) {\n        setCurrentFoodFilter(categoryName);\n      }\n    }\n    if (page === 'Bebidas') {\n      setDrinkIngredientSituation(false);\n      if (currentDrinkFilter === categoryName) {\n        setCurrentDrinkFilter('');\n      } if (currentDrinkFilter !== categoryName) {\n        setCurrentDrinkFilter(categoryName);\n      }\n    }\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn-selector\"\n      data-testid={ `${category.strCategory}-category-filter` }\n      key={ category.strCategory }\n      onClick={ () => handleClick(category.strCategory) }\n    >\n      {category.strCategory}\n    </button>\n  );\n}\n\nCategoryButton.propTypes = {\n  category: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/menu.b778cb17.svg\";","export default __webpack_public_path__ + \"static/media/close.3721b02e.svg\";","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from '../../context/AppContext';\nimport CategoryButton from '../CategoryButton';\nimport Menu from '../../images/menu.svg';\nimport Close from '../../images/close.svg';\n\nimport './CategoriesFilterBar.css';\n\nexport default function CategoriesFilterBar({ categories }) {\n  const { setCurrentFoodFilter,\n    setCurrentDrinkFilter, page,\n    setFoodIngredientSituation, setDrinkIngredientSituation } = useContext(AppContext);\n  const [openMenu, setOpenMenu] = useState(false);\n  const [buttonAnim, setButtonAnim] = useState('');\n\n  function menuChange() {\n    if (buttonAnim === '') {\n      setButtonAnim('opening');\n    } else if (buttonAnim === 'opening') {\n      setButtonAnim('closing');\n    } else {\n      setButtonAnim('opening');\n    }\n    setOpenMenu(!openMenu);\n  }\n\n  return (\n    <div>\n      <div className={ openMenu ? `button-menu ${buttonAnim}` : `button-menu ${buttonAnim}` }>\n        <button\n          type=\"button\"\n          onClick={ menuChange }\n        >\n          { openMenu\n            ? (<img src={ Close } alt=\"Close\" />)\n            : (<img src={ Menu } alt=\"menu\" />)}\n        </button>\n      </div>\n\n      <div className={ openMenu ? 'filter-bar open' : 'filter-bar closed' }>\n        {categories.map((category) => (<CategoryButton\n          key={ category.strCategory }\n          category={ category }\n        />))}\n        <button\n          className=\"btn-selector\"\n          data-testid=\"All-category-filter\"\n          type=\"button\"\n          onClick={ () => {\n            if (page === 'Comidas') {\n              setCurrentFoodFilter('');\n              setFoodIngredientSituation(false);\n            }\n            if (page === 'Bebidas') {\n              setCurrentDrinkFilter('');\n              setDrinkIngredientSituation(false);\n            }\n          } }\n        >\n          All\n        </button>\n      </div>\n    </div>\n  );\n}\n\nCategoriesFilterBar.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../../context/AppContext';\n\nimport './RecipeCard.css';\n\nexport default function RecipeCard({ details, index }) {\n  const { page } = useContext(AppContext);\n  if (page === 'Comidas') {\n    return (\n      <Link to={ `/comidas/${details.idMeal}` }>\n        <div data-testid={ `${index}-recipe-card` } className=\"card\">\n          <img\n            data-testid={ `${index}-card-img` }\n            src={ details.strMealThumb }\n            alt={ details.strMeal }\n          />\n          <h3 data-testid={ `${index}-card-name` }>{details.strMeal}</h3>\n        </div>\n      </Link>\n    );\n  }\n  if (page === 'Bebidas') {\n    return (\n      <Link to={ `/bebidas/${details.idDrink}` }>\n        <div data-testid={ `${index}-recipe-card` } className=\"card bebidas\">\n          <img\n            data-testid={ `${index}-card-img` }\n            src={ details.strDrinkThumb }\n            alt={ details.strDrink }\n          />\n          <h3 data-testid={ `${index}-card-name` }>{details.strDrink}</h3>\n        </div>\n      </Link>\n    );\n  }\n}\n\nRecipeCard.propTypes = {\n  details: PropTypes.objectOf(PropTypes.string).isRequired,\n  index: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeCard from '../RecipeCard';\n\nexport default function RecipesLibrary({ recipes }) {\n  return (\n    <div className=\"recipes-lib\">\n      {recipes.map((recipe, index) => (\n        <RecipeCard\n          key={ index }\n          details={ recipe }\n          index={ index }\n        />\n      ))}\n    </div>\n  );\n}\n\nRecipesLibrary.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport CategoriesFilterBar from '../CategoriesFilterBar';\nimport RecipesLibrary from '../RecipesLibrary';\nimport AppContext from '../../context/AppContext';\nimport Footer from '../Footer';\nimport Header from '../Header';\nimport SearchBar from '../SearchBar';\nimport Loading from '../Loading';\n\nconst ELEVEN = 11;\nconst FOUR = 4;\nexport default function RecipesMenu({ route, array, arrayCategories }) {\n  const { setPage, searching } = useContext(AppContext);\n  useEffect(() => {\n    setPage(route);\n  }, [setPage, route]);\n\n  if (array.length > 0 && arrayCategories.length > 0) {\n    const auxCategories = [...arrayCategories];\n    const firstCategories = auxCategories.filter(\n      (_category, index) => index <= FOUR,\n    );\n    const auxArray = [...array];\n    const firstArray = auxArray.filter((_recipe, index) => index <= ELEVEN);\n    return (\n      <div>\n        <Header searchRender titlePage={ route } />\n        {searching ? (\n          <SearchBar option={ route } />\n        ) : (\n          <CategoriesFilterBar categories={ firstCategories } />\n        )}\n        <RecipesLibrary recipes={ firstArray } />\n        <Footer />\n      </div>\n    );\n  }\n  return <Loading />;\n}\n\nRecipesMenu.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.object).isRequired,\n  arrayCategories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  route: PropTypes.string.isRequired,\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport RecipesMenu from '../../components/RecipesMenu';\nimport AppContext from '../../context/AppContext';\nimport fetchAPI from '../../services';\n\nconst FOOD_ENDPOINT = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\nconst FOOD_CATEGORIES_ENDPOINT = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\nconst DRINK_ENDPOINT = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst DRINK_CATEGORIES_ENDPOINT = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n\nexport default function MainPage() {\n  const history = useHistory();\n  const { currentFoodFilter, currentDrinkFilter,\n    meals, drinks, setMeals, setDrinks,\n    filteredByIngredient, foodIngredientSituation,\n    drinkIngredientSituation } = useContext(AppContext);\n\n  const [mealsCategories, setMealsCategories] = useState([]);\n  const [drinksCategories, setDrinksCategories] = useState([]);\n\n  useEffect(() => {\n    async function getMealsAndCategories() {\n      const foodCategoriesResponse = await fetchAPI(FOOD_CATEGORIES_ENDPOINT);\n      setMealsCategories(foodCategoriesResponse.meals);\n      const drinkCategoriesResponse = await fetchAPI(DRINK_CATEGORIES_ENDPOINT);\n      setDrinksCategories(drinkCategoriesResponse.drinks);\n      const foodResponse = await fetchAPI(FOOD_ENDPOINT);\n      setMeals(foodResponse.meals);\n      const drinkResponse = await fetchAPI(DRINK_ENDPOINT);\n      setDrinks(drinkResponse.drinks);\n    }\n    getMealsAndCategories();\n  }, [setDrinks, setMeals]);\n\n  useEffect(() => {\n    async function getMeals() {\n      const foodResponse = await fetchAPI(FOOD_ENDPOINT);\n      setMeals(foodResponse.meals);\n    }\n    async function getFilteredMeals(categoryName) {\n      const response = await\n      fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${categoryName}`)\n        .then((res) => res.json());\n      setMeals(response.meals);\n    }\n    if (currentFoodFilter === '') {\n      getMeals();\n    }\n    if (currentFoodFilter !== '') {\n      getFilteredMeals(currentFoodFilter);\n    }\n  }, [setMeals, currentFoodFilter]);\n\n  useEffect(() => {\n    async function getDrinks() {\n      const drinkResponse = await fetchAPI(DRINK_ENDPOINT);\n      setDrinks(drinkResponse.drinks);\n    }\n    async function getFilteredDrinks(categoryName) {\n      const response = await\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${categoryName}`)\n        .then((res) => res.json());\n      setDrinks(response.drinks);\n    }\n    if (currentDrinkFilter === '') {\n      getDrinks();\n    }\n    if (currentDrinkFilter !== '') {\n      getFilteredDrinks(currentDrinkFilter);\n    }\n  }, [setDrinks, currentDrinkFilter]);\n\n  function handleIngredientSituationMeals() {\n    if (foodIngredientSituation === true) {\n      return (\n        <RecipesMenu\n          route=\"Comidas\"\n          array={ filteredByIngredient }\n          arrayCategories={ mealsCategories }\n        />\n      );\n    }\n    return (\n      <RecipesMenu route=\"Comidas\" array={ meals } arrayCategories={ mealsCategories } />\n    );\n  }\n\n  function handleIngredientSituationDrinks() {\n    if (drinkIngredientSituation === true) {\n      return (\n        <RecipesMenu\n          route=\"Bebidas\"\n          array={ filteredByIngredient }\n          arrayCategories={ drinksCategories }\n        />\n      );\n    }\n    return (\n      <RecipesMenu\n        route=\"Bebidas\"\n        array={ drinks }\n        arrayCategories={ drinksCategories }\n      />\n    );\n  }\n\n  return (history.location.pathname.includes('/comidas')\n    ? handleIngredientSituationMeals()\n    : handleIngredientSituationDrinks()\n  );\n}\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport './TabBarButtons.css';\n\nexport default function TabBarButtons({ filter }) {\n  const SELECTED = 'selected-button';\n  const [selectAll, setSelectAll] = useState(false);\n  const [selectFood, setSelectFood] = useState(false);\n  const [selectDrinks, setSelectDrinks] = useState(false);\n\n  useEffect(() => {\n    setSelectAll(true);\n  }, []);\n\n  function handleClick({ target }) {\n    switch (target.name) {\n    case 'food':\n      setSelectFood(true);\n      setSelectDrinks(false);\n      setSelectAll(false);\n      filter('comida');\n      break;\n    case 'drinks':\n      setSelectDrinks(true);\n      setSelectFood(false);\n      setSelectAll(false);\n      filter('bebida');\n      break;\n    default:\n      setSelectAll(true);\n      setSelectDrinks(false);\n      setSelectFood(false);\n      filter('tudo');\n      break;\n    }\n  }\n  return (\n    <div className=\"tab-buttons\">\n      <button\n        name=\"all\"\n        type=\"button\"\n        className={ selectAll ? SELECTED : '' }\n        data-testid=\"filter-by-all-btn\"\n        onClick={ handleClick }\n      >\n        All\n      </button>\n      <button\n        name=\"food\"\n        type=\"button\"\n        className={ selectFood ? SELECTED : '' }\n        data-testid=\"filter-by-food-btn\"\n        onClick={ handleClick }\n      >\n        Food\n      </button>\n      <button\n        name=\"drinks\"\n        type=\"button\"\n        className={ selectDrinks ? SELECTED : '' }\n        data-testid=\"filter-by-drink-btn\"\n        onClick={ handleClick }\n      >\n        Drinks\n      </button>\n    </div>\n  );\n}\n\nTabBarButtons.propTypes = {\n  filter: PropTypes.func.isRequired,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../../images/shareIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\n\nimport './CardRenderRecipes.css';\n\nconst copy = require('clipboard-copy');\n\nfunction CardRenderRecipes({ recipes, favoriteButton }) {\n  const [hasMessage, setHasMessage] = useState(false);\n\n  function handleClick(recipe) {\n    copy(`http://localhost:3000/${recipe.type}s/${recipe.id}`);\n    setHasMessage(true);\n    const TIMER = 1000;\n    setHasMessage(true);\n    setTimeout(() => {\n      setHasMessage(false);\n    }, TIMER);\n  }\n\n  function ToTurnFavorite(item) {\n    const newList = [];\n    const getItem = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    getItem.forEach((itemStorage) => {\n      if (itemStorage.id !== item.id) {\n        newList.push(itemStorage);\n      }\n    });\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newList));\n    window.location.reload();\n  }\n\n  function messageCopy(renderMessage) {\n    return (\n      renderMessage ? (\n        <div className={ hasMessage ? 'show-message' : 'hidden-message' }>\n          Link copiado!\n        </div>\n      ) : '');\n  }\n\n  function tags(tagNames, ind) {\n    if (tagNames) {\n      return (\n        <div className=\"tags\">\n          {tagNames.map((tagName, i) => (i <= 1) && (\n            <p\n              key={ tagName }\n              data-testid={ `${ind}-${tagName}-horizontal-tag` }\n              className=\"tag-name\"\n            >\n              {tagName}\n            </p>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  function topTextRender(item) {\n    if (item.type === 'bebida') {\n      return item.alcoholicOrNot\n        ? `${item.alcoholicOrNot} - ${item.category}`\n        : item.alcoholicOrNot;\n    }\n    return item.area\n      ? `${item.area} - ${item.category}`\n      : item.category;\n  }\n\n  function favoritesRender(recipesReceive) {\n    return (\n      <div className=\"main-done-recipes\">\n        { recipesReceive.map((recipe, index) => (\n          <div key={ recipe.id } className=\"cardItem\">\n            {console.log(recipe)}\n            <div className=\"image-card\">\n              <Link to={ `/${recipe.type}s/${recipe.id}` }>\n                <img\n                  src={ recipe.image }\n                  alt=\"recipe\"\n                  data-testid={ `${index}-horizontal-image` }\n                />\n              </Link>\n            </div>\n            <div className=\"content-card\">\n              <div className=\"text-card\">\n                <div className=\"recipe-category\">\n                  <p data-testid={ `${index}-horizontal-top-text` }>\n                    { topTextRender(recipe) }\n                  </p>\n                </div>\n                <Link to={ `/${recipe.type}s/${recipe.id}` } className=\"recipe-name\">\n                  <p data-testid={ `${index}-horizontal-name` }>\n                    { recipe.name }\n                  </p>\n                </Link>\n                { favoriteButton ? ('') : (\n                  <div className=\"recipe-date\">\n                    <p data-testid={ `${index}-horizontal-done-date` }>\n                      { `feita em: ${recipe.doneDate}` }\n                    </p>\n                  </div>\n                )}\n                <div className=\"tags\">\n                  {tags(recipe.tags, index)}\n                </div>\n              </div>\n              <div className=\"buttons-card\">\n                <button\n                  type=\"button\"\n                  className=\"share-button\"\n                  onClick={ () => handleClick(recipe) }\n                >\n                  <img\n                    src={ shareIcon }\n                    alt=\"share Icon\"\n                    data-testid={ `${index}-horizontal-share-btn` }\n                  />\n                </button>\n                { favoriteButton ? (\n                  <button\n                    type=\"button\"\n                    className=\"favorite-button\"\n                    onClick={ () => ToTurnFavorite(recipe) }\n                  >\n                    <img\n                      src={ blackHeartIcon }\n                      alt=\"favorite Icon\"\n                      data-testid={ `${index}-horizontal-favorite-btn` }\n                    />\n                  </button>) : ''}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n  return (\n    <div>\n      { favoritesRender(recipes) }\n      { messageCopy(hasMessage) }\n    </div>\n  );\n}\n\nCardRenderRecipes.propTypes = {\n  favoriteButton: PropTypes.bool,\n  recipes: PropTypes.any,\n}.isRequired;\nexport default CardRenderRecipes;\n","import React, { useState, useEffect } from 'react';\n\nimport Header from '../../components/Header';\nimport TabBarButtons from '../../components/TabBarButtons';\n\n// import './DoneRecipes.css';\nimport CardRenderRecipes from '../../components/CardRenderRecipes';\n\nexport default function DoneRecipes() {\n  const [doneRecipes, setDoneRecipes] = useState([]);\n  const [copyDoneRecipes, setCopyDoneRecipes] = useState([]);\n\n  useEffect(() => {\n    const getDoneFromStorage = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n    setDoneRecipes(getDoneFromStorage);\n    setCopyDoneRecipes(getDoneFromStorage);\n  }, []);\n\n  function toFilter(filterItems) {\n    let filteredRecipes;\n    switch (filterItems) {\n    case 'comida':\n      filteredRecipes = copyDoneRecipes.filter((item) => item.type === filterItems);\n      break;\n    case 'bebida':\n      filteredRecipes = copyDoneRecipes.filter((item) => item.type === filterItems);\n      break;\n    default:\n      filteredRecipes = copyDoneRecipes;\n      break;\n    }\n    setDoneRecipes(filteredRecipes);\n  }\n\n  return (\n    <div>\n      <Header searchRender={ false } titlePage=\"Receitas Feitas\" />\n      { doneRecipes ? (\n        <>\n          <TabBarButtons filter={ toFilter } />\n          <CardRenderRecipes recipes={ doneRecipes } favoriteButton={ false } />\n        </>\n      ) : '' }\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function NotFound() {\n  return (\n    <div>\n      Not Found\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../../context/AppContext';\nimport './index.css';\n\nexport default function IngredientCard({ details, index }) {\n  const { setFilteredByIngredient, page,\n    setFoodIngredientSituation, setDrinkIngredientSituation } = useContext(AppContext);\n\n  async function handleClick() {\n    if (page === 'Comidas') {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${details.strIngredient}`).then((res) => res.json());\n      setFilteredByIngredient(response.meals);\n      setFoodIngredientSituation(true);\n    }\n    if (page === 'Bebidas') {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${details.strIngredient1}`).then((res) => res.json());\n      setFilteredByIngredient(response.drinks);\n      setDrinkIngredientSituation(true);\n    }\n  }\n\n  if (page === 'Comidas') {\n    return (\n      <Link\n        onClick={ handleClick }\n        to=\"/comidas\"\n      >\n        <div className=\"ingredient-card\" data-testid={ `${index}-ingredient-card` }>\n          <div className=\"igredient-image\">\n            <img\n              data-testid={ `${index}-card-img` }\n              src={ `https://www.themealdb.com/images/ingredients/${details.strIngredient}-Small.png` }\n              alt={ details.strIngredient }\n            />\n          </div>\n          <div className=\"igredient-name\">\n            <h3 data-testid={ `${index}-card-name` }>{details.strIngredient}</h3>\n          </div>\n        </div>\n      </Link>\n    );\n  }\n  if (page === 'Bebidas') {\n    return (\n      <Link\n        onClick={ handleClick }\n        to=\"/bebidas\"\n      >\n        <div className=\"ingredient-card\" data-testid={ `${index}-ingredient-card` }>\n          <div className=\"igredient-image\">\n            <img\n              data-testid={ `${index}-card-img` }\n              src={ `https://www.thecocktaildb.com/images/ingredients/${details.strIngredient1}-Small.png` }\n              alt={ details.strIngredient1 }\n            />\n          </div>\n          <div className=\"igredient-name\">\n            <h3 data-testid={ `${index}-card-name` }>{details.strIngredient1}</h3>\n          </div>\n        </div>\n      </Link>\n    );\n  }\n}\n\nIngredientCard.propTypes = {\n  route: PropTypes.string.isRequired,\n  details: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IngredientCard from '../IngredientCard';\nimport './IngredientsLibrary.css';\n\nfunction IngredientsLibrary({ ingredients }) {\n  return (\n    <div className=\"ingredients-lib\">\n      {ingredients.map((ingredient, index) => (\n        <IngredientCard\n          key={ index }\n          details={ ingredient }\n          index={ index }\n        />\n      ))}\n    </div>\n  );\n}\n\nIngredientsLibrary.propTypes = {\n  ingredients: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default IngredientsLibrary;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Footer from '../Footer';\nimport Header from '../Header';\nimport fetchAPI from '../../services';\nimport IngredientsLibrary from '../IngredientsLibrary';\nimport AppContext from '../../context/AppContext';\nimport Loading from '../Loading';\n\nconst ELEVEN = 11;\nfunction IngredientsMenu({ route }) {\n  const { setPage } = useContext(AppContext);\n  const [ingredients, setIngredients] = useState([]);\n\n  useEffect(() => {\n    setPage(route);\n    async function getMealsIngredients() {\n      const response = await fetchAPI('https://www.themealdb.com/api/json/v1/1/list.php?i=list');\n      setIngredients(response.meals);\n    }\n    async function getDrinksIngredients() {\n      const response = await fetchAPI('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n      setIngredients(response.drinks);\n    }\n    if (route === 'Comidas') {\n      getMealsIngredients();\n    } if (route === 'Bebidas') {\n      getDrinksIngredients();\n    }\n  }, [route, setPage]);\n\n  if (ingredients.length > 0) {\n    const auxIngredients = [...ingredients];\n    const firstIngredients = auxIngredients.filter((_recipe, index) => index <= ELEVEN);\n    return (\n      <div>\n        <Header searchRender={ false } titlePage=\"Explorar Ingredientes\" />\n        <IngredientsLibrary ingredients={ firstIngredients } />\n        <Footer />\n      </div>\n    );\n  } return (\n    <div>\n      <Header searchRender={ false } titlePage=\"Explorar Ingredientes\" />\n      <Loading />\n      <Footer />\n    </div>\n  );\n}\n\nIngredientsMenu.propTypes = {\n  route: PropTypes.string.isRequired,\n};\n\nexport default IngredientsMenu;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport IngredientsMenu from '../../components/IngredientsMenu';\n\nexport default function IngredientsExplorer() {\n  const history = useHistory();\n\n  return (history.location.pathname.includes('/comidas') ? (\n    <IngredientsMenu route=\"Comidas\" />\n  ) : (\n    <IngredientsMenu route=\"Bebidas\" />\n  )\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nimport Header from '../../components/Header';\nimport TabBarButtons from '../../components/TabBarButtons';\n\nimport CardRenderRecipes from '../../components/CardRenderRecipes';\n\nexport default function FavoriteRecipes() {\n  // objeto principal\n  const [doneRecipes, setDoneRecipes] = useState([]);\n  const [copyDoneRecipes, setCopyDoneRecipes] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem) {\n      const getItems = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      setDoneRecipes(getItems);\n      setCopyDoneRecipes(getItems);\n      console.log(getItems);\n    }\n  }, []);\n\n  function toFilter(filterItems) {\n    let filteredRecipes;\n    switch (filterItems) {\n    case 'comida':\n      filteredRecipes = copyDoneRecipes.filter((item) => item.type === filterItems);\n      break;\n    case 'bebida':\n      filteredRecipes = copyDoneRecipes.filter((item) => item.type === filterItems);\n      break;\n    default:\n      filteredRecipes = copyDoneRecipes;\n      break;\n    }\n    setDoneRecipes(filteredRecipes);\n  }\n\n  return (\n    <div>\n      <Header searchRender={ false } titlePage=\"Receitas Favoritas\" />\n      { doneRecipes ? (\n        <>\n          <TabBarButtons filter={ toFilter } />\n          <CardRenderRecipes recipes={ doneRecipes } favoriteButton />\n        </>\n      ) : '' }\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function RenderCategory({ foodType, drinkMessage, foodMessage }) {\n  return (\n    <h2 data-testid=\"recipe-category\">\n      { foodType === 'comida' ? foodMessage : drinkMessage }\n    </h2>\n  );\n}\n\nRenderCategory.propTypes = {\n  foodType: PropTypes.string.isRequired,\n  drinkMessage: PropTypes.string.isRequired,\n  foodMessage: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport FavButton from '../FavButton';\nimport RenderCategory from './RenderCategory';\nimport shareIcon from '../../images/shareIcon.svg';\n\nimport './inProgressRecipes.css';\nimport {\n  emptyNullKiller,\n  getDataFromLocalStorage,\n  mealOrCocktail,\n  setDataToLocalStorage,\n} from '../../services';\n\nconst copy = require('clipboard-copy');\n\nconst InprogressRecipes = ({ foodType, id, history }) => {\n  const [ingredients, setIngredients] = useState([]);\n  const [measures, setMeasures] = useState([]);\n  const [instructions, setInstructions] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [linkCopied, setLinkCopied] = useState(false);\n  const [foodObj, setFoodObj] = useState({});\n  const [ingredientsCheck, setIngredientsCheck] = useState([]);\n  const [doneRecipes, setDoneRecipes] = useState();\n  const setObjectState = (apiData, typeObj) => {\n    const drinkOrFood = {\n      comida: apiData.meals,\n      bebida: apiData.drinks,\n    };\n    const obj = drinkOrFood[typeObj][0];\n    const currentObj = {\n      id,\n      type: typeObj,\n      area: obj.strArea || '',\n      category: obj.strCategory,\n      alcoholicOrNot: obj.strAlcoholic || '',\n      name: typeObj === 'comida' ? obj.strMeal : obj.strDrink,\n      image: typeObj === 'comida' ? obj.strMealThumb : obj.strDrinkThumb,\n    };\n    setFoodObj(currentObj);\n    const ingredient = emptyNullKiller('strIngredient', obj);\n    const measure = emptyNullKiller('strMeasure', obj);\n    setIngredients((prevState) => [...prevState, ...ingredient]);\n    setMeasures((prevState) => [...prevState, ...measure]);\n    setInstructions(obj.strInstructions);\n  };\n\n  const fetchDetails = async () => {\n    if (foodType === 'comida') {\n      setLoading(true);\n      const res = await fetch(\n        `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`,\n      ).then((r) => r.json());\n      setObjectState(res, 'comida');\n    } else {\n      setLoading(true);\n      const res = await fetch(\n        `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`,\n      ).then((r) => r.json());\n      setObjectState(res, 'bebida');\n    }\n    setLoading(false);\n  };\n\n  const handleCheckClick = ({ target }) => {\n    const isChecked = target.checked;\n    if (isChecked) {\n      setIngredientsCheck([...ingredientsCheck, target.id]);\n    } else {\n      setIngredientsCheck(\n        ingredientsCheck.filter((ingredient) => ingredient !== target.id),\n      );\n    }\n  };\n\n  const handleDoneClick = () => {\n    const data = new Date();\n    const dia = data.getDate();\n    const mes = data.getMonth();\n    const ano = data.getYear();\n    const full = `${dia}/${mes}/${ano}`;\n    const newArr = { ...foodObj, doneDate: full };\n    const recipesDone = [...doneRecipes, newArr];\n    localStorage.setItem('doneRecipes', JSON.stringify(recipesDone));\n    history.push('/receitas-feitas');\n  };\n\n  const handleShareClick = () => {\n    const { pathname } = history.location;\n    copy(`http://localhost:3000${pathname}`);\n    setLinkCopied(true);\n    const TIMER = 1000;\n    setTimeout(() => {\n      setLinkCopied(false);\n    }, TIMER);\n  };\n\n  useEffect(() => {\n    fetchDetails();\n    const inProgressRecipes = getDataFromLocalStorage();\n    const dataFromLocalStorage = inProgressRecipes[mealOrCocktail(foodType)][id] || [];\n    setIngredientsCheck(dataFromLocalStorage);\n\n    const doneRecipesStorage = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n    setDoneRecipes(doneRecipesStorage);\n  }, []);\n\n  useEffect(() => {\n    const inProgressRecipes = getDataFromLocalStorage();\n    inProgressRecipes[mealOrCocktail(foodType)][id] = ingredientsCheck;\n    setDataToLocalStorage(inProgressRecipes);\n  }, [foodType, id, ingredientsCheck]);\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n\n  const altText = `Foto do ${foodObj.name}`;\n\n  function messageCopy(renderMessage) {\n    return (\n      renderMessage ? (\n        <div className={ linkCopied ? 'show-message' : 'hidden-message' }>\n          Link copiado!\n        </div>\n      ) : '');\n  }\n\n  return (\n    <div className=\"main-progress\">\n      <div className=\"recipe-title-in-progress\">\n        <h1 data-testid=\"recipe-title\">{foodObj.name}</h1>\n      </div>\n      <div className=\"recipe-category\">\n        <RenderCategory\n          foodType={ foodType }\n          foodMessage={ foodObj.category }\n          drinkMessage={ foodObj.alcoholicOrNot }\n        />\n      </div>\n      <div className=\"recipe-image\">\n        <img\n          src={ foodObj.image }\n          alt={ altText }\n          data-testid=\"recipe-photo\"\n          className=\"img\"\n        />\n      </div>\n      <div className=\"buttons\">\n        <FavButton id={ id } foodObj={ foodObj } />\n        <button\n          type=\"button\"\n          data-testid=\"share-btn\"\n          onClick={ handleShareClick }\n        >\n          <img\n            src={ shareIcon }\n            alt=\"share Icon\"\n          />\n        </button>\n      </div>\n      <div className=\"ingredients\">\n        {ingredients.map((ingredient, index) => {\n          const testid = `${index}-ingredient-step`;\n          const ingredientText = `${ingredient} - ${measures[index]}`;\n          const isChecked = ingredientsCheck.includes(`${index}`);\n          return (\n            <div key={ index } data-testid={ testid } className=\"check\">\n              <label\n                htmlFor={ index }\n                id={ index }\n                className={ isChecked ? 'checked' : '' }\n              >\n                <input\n                  type=\"checkbox\"\n                  id={ index }\n                  name={ `ingredient${index}` }\n                  onChange={ handleCheckClick }\n                  checked={ isChecked }\n                />\n                <span className={ isChecked ? 'checked' : '' } />\n                <div>{ingredientText}</div>\n              </label>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"instructions-area\">\n        <h3>Instructions</h3>\n        <p data-testid=\"instructions\">{instructions}</p>\n      </div>\n      <div className=\"finish-recipe-btn\">\n        <button\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n          onClick={ handleDoneClick }\n          className=\"begin-button\"\n          disabled={ ingredients.length !== ingredientsCheck.length }\n        >\n          Finalizar Receita\n        </button>\n      </div>\n      { messageCopy(linkCopied) }\n    </div>\n  );\n};\n\nInprogressRecipes.propTypes = {\n  foodType: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default InprogressRecipes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InProgressRecipes from '../../components/InProgressRecipes/Index';\n\nconst ProgressRecipes = ({ match, history }) => {\n  const { params, path } = match;\n  const charactersIndex = 6;\n  const foodType = path.substr(1, charactersIndex);\n  return (\n    <InProgressRecipes id={ params.id } foodType={ foodType } history={ history } />\n  );\n};\n\nProgressRecipes.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default ProgressRecipes;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Provider from './context/Provider';\nimport Login from './pages/Login';\n// import Foods from './pages/Foods';\nimport Explorer from './pages/Explorer';\nimport FoodExplorer from './pages/FoodExplorer';\nimport DrinkExplorer from './pages/DrinkExplorer';\nimport FoodArea from './pages/FoodArea';\nimport Profile from './pages/Profile';\nimport DetailsPage from './pages/DetailsPage';\nimport MainPage from './pages/MainPage';\nimport DoneRecipes from './pages/DoneRecipes';\nimport NotFound from './pages/NotFound';\nimport IngredientsExplorer from './pages/IngredientsExplorer';\nimport FavoriteRecipes from './pages/FavoriteRecipes';\n// import FoodRecipe from './pages/FoodRecipe';\nimport ProgressRecipes from './pages/ProgressRecipes';\n\nfunction App() {\n  return (\n    <Provider>\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/comidas\" component={ MainPage } />\n        <Route exact path=\"/bebidas\" component={ MainPage } />\n        <Route\n          exact\n          path=\"/comidas/:id\"\n          render={ (props) => <DetailsPage { ...props } /> }\n        />\n        <Route\n          exact\n          path=\"/bebidas/:id\"\n          render={ (props) => <DetailsPage { ...props } /> }\n        />\n        <Route\n          path=\"/comidas/:id/in-progress\"\n          component={ (props) => <ProgressRecipes { ...props } /> }\n        />\n        <Route\n          path=\"/bebidas/:id/in-progress\"\n          component={ (props) => <ProgressRecipes { ...props } /> }\n        />\n        <Route exact path=\"/explorar\" component={ Explorer } />\n        <Route exact path=\"/explorar/comidas\" component={ FoodExplorer } />\n        <Route exact path=\"/explorar/bebidas\" component={ DrinkExplorer } />\n        <Route\n          path=\"/explorar/comidas/ingredientes\"\n          component={ IngredientsExplorer }\n        />\n        <Route\n          path=\"/explorar/bebidas/ingredientes\"\n          component={ IngredientsExplorer }\n        />\n        <Route path=\"/explorar/comidas/area\" component={ FoodArea } />\n        <Route path=\"/perfil\" component={ Profile } />\n        <Route path=\"/receitas-feitas\" component={ DoneRecipes } />\n        <Route path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\n        <Route component={ NotFound } />\n      </Switch>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}